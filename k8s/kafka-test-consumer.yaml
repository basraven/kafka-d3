---
apiVersion: v1
kind: ConfigMap
metadata:
  name: consumer-script
  namespace: kafka-d3
data:
  init.sh: |-
    #!/bin/sh
    pip install kafka-python
    python3 /consumer/consumer.py

  consumer.py: |-
    #!/usr/local/bin/python3
    from kafka import KafkaConsumer
    from time import sleep
    from json import loads

    # interval = 10
    # print("Starting consumer with %i as interval" % interval)

    
    consumer = KafkaConsumer(
        "test",
        # auto_offset_reset='earliest',
        # enable_auto_commit=True,
        # group_id='my-group',
        bootstrap_servers=["kafka:9092"],
        consumer_timeout_ms=1000
        )

    while True:
      for message in consumer:
          print("Consumed")
          print(message.value)
          # sleep(interval)

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-test-consumer
  namespace: kafka-d3
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kafka-test-consumer
  template:
    metadata:
      labels:
        task: kafka-d3
        k8s-app: kafka-test-consumer
    spec:
      volumes:
        - name: init-script-volume
          configMap:
            name: consumer-script
            items:
            - key: init.sh
              path: init.sh
            defaultMode: 0744
        - name: consumer-script-volume
          configMap:
            name: consumer-script
            items:
            - key: consumer.py
              path: consumer.py
            defaultMode: 0744
      containers:
      - name: python3
        ports:
        - containerPort: 80
        image: python:3-alpine
        env:
          - name: PYTHONUNBUFFERED
            value: "1"
        command: 
          - /init/init.sh
        volumeMounts:
        - name: init-script-volume
          mountPath: /init
        - name: consumer-script-volume
          mountPath: /consumer